import Head from "next/head";
import { useState } from "react";
import Editor from "../components/editor";
import { trpc } from "../utils/trpc";

const Note = () => {
    const [data, setData] = useState("");
    const [noteId, setNoteId] = useState("");

    const mutate = trpc.auth.updateNoteText.useMutation();

    // For now disabling syncing - I think trpc adds some overhead
    // which makes the websocket messages slower than just using
    // socket io which was what was used before. the overhead
    // causes some weird shit to happen when typing fast
    // or maybe im forgetting something else I done on the
    // other one lol
    const a = trpc.auth.test.useSubscription(undefined, {
        onData(d) {
            console.log("data", d);
            setData(d);
        },
    });

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className=" flex min-h-screen flex-col bg-black ">
                <div className="h-screen">
                    <p>Data: {data}</p>
                    <Editor

                    // onChange={(e) => {
                    //     mutate.mutateAsync({
                    //         content: e ?? "",
                    //         id: noteId,
                    //     });
                    // }}
                    />
                </div>
            </main>
        </>
    );
};

export default Note;
